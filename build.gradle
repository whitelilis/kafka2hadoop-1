apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = 1.6
version = '0.1'

def mainClass = "kafka.etl.impl.SimpleKafkaETLJob"

jar {
  from {
  	configurations.deploy.collect { it.isDirectory() ? it : zipTree(it) }
  }
  manifest {
    attributes 'Implementation-Title': 'Parallel Hadoop Consumer', 'Implementation-Version': version
  }
}

repositories {
    mavenCentral()
    maven { url "http://clojars.org/repo" }
    maven { url "http://conjars.org/repo" }
}


configurations {
	deploy {
    	exclude module: 'jms'
    	exclude module: 'jmxtools'
    	exclude module: 'jmxri'
	}
	
    compile.extendsFrom deploy
}

dependencies {
	compile 'org.apache.hadoop:hadoop-core:1.0.3'
	
    deploy 'com.google.guava:guava:13.0.1'
    deploy 'com.twitter:kafka_2.9.2:0.7.0'
    deploy 'org.scala-lang:scala-library:2.9.2'
    deploy 'com.fasterxml.jackson.core:jackson-core:2.2.3'
    deploy 'com.fasterxml.jackson.core:jackson-databind:2.2.3'
}

def executeOnShell(String command) {
	def process = new ProcessBuilder(command.split(' '))
                                    .redirectErrorStream(true) 
                                    .start()
	process.inputStream.eachLine {println it}
	process.waitFor();
	
	return process.exitValue()
}

task hadoopJar << {
	
	
	def propertyFile =  System.properties['propertyFile']
	
	def rjar = new File('.').getAbsoluteFile().toURI().relativize(jar.archivePath.toURI()).getPath();
	
	def cmd = "hadoop jar ${rjar} ${mainClass} ${propertyFile}"
	
	println "Running: ${cmd}"
	
	executeOnShell cmd
	
}
